---
- hosts: infra
  gather_facts: true
  vars_files: vars/vmw_env.yml
  become: true
  serial: 4
  tasks: 

    - name: Enable port forwarding
      lineinfile:
        path: /etc/sysctl.conf
        state: present
        line: net.ipv4.ip_forward = 1

# Configure dhcpd

    - name: Install dhcpd service
      yum:
        name: dhcp-server
        state: present
   
    - name: Copy file named.conf 
      copy:
        src: config/etc/named.conf
        dest: /etc/named.conf
 
    - name: Create Folder
      file: 
        path: "/var/named"
        recurse: yes
        state: directory
        
    - name: Copy file example.com.db  
      copy:
        src: config/var/named/example.com.db
        dest: /var/named/example.com.db

    - name: Copy file example.com.reverse.db 
      copy:
        src: config/var/named/example.com.reverse.db
        dest: /var/named/example.com.reverse.db
    
    - name: Restart dhcpd service
      service:
        name: dhcpd
        state: started
        enabled: true

# Configure httpd

    - name: Install httpd service
      yum:
        name: httpd
        state: present
   
    - name: Restart httpd service
      service:
        name: httpd
        state: started
        enabled: true

# Create folder and download images

    - name: Create a ignitions directory if it does not exist
      file:
        path: /var/www/html/openshift4/4.6.4/ignitions
        state: directory
        mode: '0755'

    - name: Create a RHCOS images directory if it does not exist
      file:
        path: /var/www/html/openshift4/images
        state: directory
        mode: '0755'


# Configure haproxy

    - name: Install haproxy service
      yum:
        name: haproxy
        state: present
   
    - name: Copy file index.html
      copy:
        src: config/etc/haproxy/haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg

    - name: Restart haproxy service
      service:
        name: haproxy
        state: started
        enabled: true 

# Configure tftpd

    - name: Install tftpd service
      yum:
        name: tftpd
        state: present
   
    - name: Copy file 01-52-54-00-00-32-09
      copy:
        src: config/var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-09
        dest: /var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-09

    - name: Copy file 01-52-54-00-00-32-0a
      copy:
        src: config/var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0a
        dest: /var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0a

    - name: Copy file 01-52-54-00-00-32-0b
      copy:
        src: config/var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0b
        dest: /var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0b

    - name: Copy file 01-52-54-00-00-32-0c
      copy:
        src: config/var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0c
        dest: /var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0c
  
    - name: Copy file 01-52-54-00-00-32-0d
      copy:
        src: config/var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0d
        dest: /var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0d
  
    - name: Copy file 01-52-54-00-00-32-0e
      copy:
        src: config/var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0e
        dest: /var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0e

    - name: Restart tftpd service
      service:
        name: tftpd
        state: started
        enabled: true


# Download openshift-install and oc binaries from the OpenShift clients mirror

    - name: Download oc to /root folder
      get_url:
        url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.6.1/openshift-client-linux-4.6.1.tar.gz
        dest: /root/openshift-client-linux-4.6.1.tar.gz
        force: no
        mode: 0644

    - name: Download openshift-install to /root folder
      get_url:
        url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.6.1/openshift-install-linux.tar.gz
        dest: /root/openshift-install-linux.tar.gz
        force: no
        mode: 0644

    - name: Check openshift-client is exists  
      stat:
        path: /root/openshift-client-linux
      register: ocl

    - name: Check openshift-install-linux is exists  
      stat:
        path: /usr/local/bin/openshift-install-linux
      register: oil
      
    - name: Extract /root/openshift-install-linux.tar.gz
      ansible.builtin.unarchive:
        src: /root/openshift-install-linux.tar.gz
        dest: /usr/local/bin/openshift-install-linux
        mode: 0644
      when: not oil.stat.exists

    - name: Extract /root/openshift-install-linux.tar.gz
      ansible.builtin.unarchive:
        src: /root/openshift-client-linux-4.6.1.tar.gz
        dest: /root
        mode: 0644
      when: not ocl.stat.exists

    - name: Set up the bash commands completion
      shell: |
        oc completion bash > /etc/bash_completion.d/openshift
        openshift-install completion bash /etc/bash_completion.d/openshift-install
        source /etc/bash_completion.d/openshift
        source /etc/bash_completion.d/openshift-install

# Create folder ocp4upi

    - name: Create a folder ocp4upi to store install-config.yaml 
      file:
        path: /root/ocp4upi
        state: directory
        mode: '0755'

    - name: Copy file install-config.yaml
      copy:
        src: config/ocp4upi/install-config.yaml
        dest: /root/ocp4upi/install-config.yaml

    - name: Copy pull_secret into file install-config.yaml
      lineinfile:
        line: "{{ my_pull_secret }}"
        regexp: ^input_pull_secret
        path: /root/ocp4upi/install-config.yaml

    - name: Create a keypair
      community.crypto.openssh_keypair:
        path: /root/.ssh/id_rsa    
        force: True
      register: output_keypair

    - name: Copy public key into file install-config.yaml
      lineinfile:
        line: "{{ output_keypair.public_key }}"
        regexp: ^input_public_key
        path: /root/ocp4upi/install-config.yaml

    - name: Create manifest
      shell:
        openshift-install create manifests --dir=/root/ocp4upi/

    - name: Create ignition
      shell:
        openshift-install create ignition-configs --dir=/root/ocp4upi/

    - name: Copy file bootstrap.ign
      copy:
        remote_src: true
        src: /root/ocp4upi/bootstrap.ign
        dest: /var/www/html/openshift4/4.6.4/ignitions/bootstrap.ign

    - name: Copy file bootstrap.ign
      copy:
        remote_src: true
        src: /root/ocp4upi/master.ign
        dest: /var/www/html/openshift4/4.6.4/ignitions/master.ign

    - name: Copy file metadata.json
      copy:
        remote_src: true
        src: /root/ocp4upi/metadata.json
        dest: /var/www/html/openshift4/4.6.4/ignitions/metadata.json       

    - name: Copy file worker.ign
      copy:
        remote_src: true
        src: /root/ocp4upi/worker.ign
        dest: /var/www/html/openshift4/4.6.4/ignitions/worker.ign      
