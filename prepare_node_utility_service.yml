---
- hosts: infra
  gather_facts: true
  vars_files: vars/vmw_env.yml
  vars:
    - raw_disks: sdb
    - vg_name: data
    - lv_name: lv_nfs
    - require_lv_size: 5gb
    - fs: xfs
    - nfs_mount_point: /exports

  become: no
  serial: 4
  tasks: 

# Prepare utility as a router

    - name: Start firewalld service
      service:
        name: firewalld
        state: started
        enabled: true    

    - name: Enable port forwarding
      lineinfile:
        path: /etc/sysctl.conf
        state: present
        line: net.ipv4.ip_forward = 1
      
    - name: Add zone external to ens128
      community.general.nmcli:
        type: ethernet
        conn_name: ens128
        zone: external
        state: present
    
    - name: Add zone external to ens224
      community.general.nmcli:
        type: ethernet
        conn_name: ens224
        zone: external
        state: present

    - ansible.posix.firewalld:
        masquerade: yes
        state: enabled
        permanent: yes
        zone: "{{ item }}"
      with_items:
        - internal
        - external

# Allow firewall service
    
    - name: Allow service to internal
      ansible.posix.firewalld:
        zone: internal
        service: "{{ item }}"
        permanent: yes
        state: enabled
      with_items:
        - http
        - https
        - dhcp
        - rpc-bind
        - mountd
        - nfs

    - name: Allow port to internal
      ansible.posix.firewalld:
        zone: internal
        port: "{{ item }}"
        permanent: yes
        state: enabled   
      with_items:
        - 53/udp
        - 53/tcp
        - 8080/tcp
        - 6443/tcp
        - 22623/tcp

    - name: Allow service to external
      ansible.posix.firewalld:
        zone: external
        service: "{{ item }}"
        permanent: yes
        state: enabled
      with_items:
        - http
        - https
        - dhcp

    - name: Allow port to external
      ansible.posix.firewalld:
        zone: external
        port: "{{ item }}"
        permanent: yes
        state: enabled   
      with_items:
        - 9000/tcp
        - 6443/tcp
        - 32700/tcp

# Configure dhcpd

    - name: Install dhcpd service
      yum:
        name: dhcp-server
        state: present

    - name: Copy file /etc/dhcp/dhcpd.conf
      copy:
        src: config/etc/dhcp/dhcpd.conf
        dest: /etc/dhcp/dhcpd.conf

    - name: Restart dhcpd service
      service:
        name: dhcpd
        state: started
        enabled: true

# Configure dns

    - name: Install named service
      yum:
        name: bind
        state: present
   
    - name: Copy file named.conf 
      copy:
        src: config/etc/named.conf
        dest: /etc/named.conf
 
    - name: Create Folder
      file: 
        path: "/var/named"
        recurse: yes
        state: directory

    - name: Copy file example.com.db  
      copy:
        src: config/var/named/example.com.db
        dest: /var/named/example.com.db

    - name: Copy file example.com.reverse.db 
      copy:
        src: config/var/named/example.com.reverse.db
        dest: /var/named/example.com.reverse.db

    - name: Restart named service
      service:
        name: named
        state: started
        enabled: true    

# Configure httpd

    - name: Install httpd service
      yum:
        name: httpd
        state: present
    
    - name: Change httpd config to us port 8080 
      lineinfile:
        line: "Listen 8080"
        regexp: ^Listen
        path: /etc/httpd/conf/httpd.conf      
   
    - name: Restart httpd service
      service:
        name: httpd
        state: started
        enabled: true
 
# Configure haproxy

    - name: Install haproxy service
      yum:
        name: haproxy
        state: present
   
    - name: Copy file haproxy.cfg
      copy:
        src: config/etc/haproxy/haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg

    - name: Restart haproxy service
      service:
        name: haproxy
        state: started
        enabled: true 

# Configure tftpd

    - name: Install tftpd service
      yum:
        name: tftp-server
        state: present
    
    - name: Create a pxelinux directory if it does not exist
      file:
        path: /var/lib/tftpboot/pxelinux.cfg  
        state: directory
        mode: '0755'

    - name: Copy file 01-52-54-00-00-32-09
      copy:
        src: config/var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-09
        dest: /var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-09

    - name: Copy file 01-52-54-00-00-32-0a
      copy:
        src: config/var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0a
        dest: /var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0a

    - name: Copy file 01-52-54-00-00-32-0b
      copy:
        src: config/var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0b
        dest: /var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0b

    - name: Copy file 01-52-54-00-00-32-0c
      copy:
        src: config/var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0c
        dest: /var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0c
  
    - name: Copy file 01-52-54-00-00-32-0d
      copy:
        src: config/var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0d
        dest: /var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0d
  
    - name: Copy file 01-52-54-00-00-32-0e
      copy:
        src: config/var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0e
        dest: /var/lib/tftpboot/pxelinux.cfg/01-52-54-00-00-32-0e

    - name: Restart tftpd service
      service:
        name: tftp
        state: started
        enabled: true

### Configure storage 

    - name: Create the "{{ vg_name }}" Volume group.
      lvg:
        pvs: "/dev/{{ raw_disks }}"
        vg: "{{ vg_name }}"
        pesize: "8"
        pv_options: '-Z y'
        force: no
        state: present

    - name: Create the "{{ lv_name }}" Logical Volume.
      lvol:
        vg: "{{ vg_name }}"
        lv: "{{ lv_name }}"
        size: "{{ require_lv_size }}"
        active: yes
        force: no
        state: present
    
    - name: Create a "{{ fs }}" filesystem on lvm "/dev/mapper/{{ vg_name}}-{{ lv_name}}".
      filesystem:
        fstype: "{{ fs }}"
        dev: "/dev/mapper/{{ vg_name }}-{{ lv_name }}"
        force: no

    - name: Create a directory to mount the filesystem.
      file:
        path: "{{ nfs_mount_point }}"
        state: directory
        mode: '0755'

    - name: Mount the created "{{ fs }}" filesystem.
      mount:
        path: "{{ nfs_mount_point }}"
        src: "/dev/mapper/{{ vg_name}}-{{ lv_name}}"
        fstype: "{{ fs }}"
        opts: rw,nosuid,noexec
        state: mounted

### Configure NFS

    - name: install nfs-utils
      yum: 
        name: nfs-utils 
        state: latest

    - name: enable rpcbind nfslock nfs
      service:
        name: "{{ item }}"
        enabled: yes
      with_items:
        - rpcbind
        - nfslock
        - nfs

    - name: Copy exports file.
      template:
        src: config/etc/exports
        dest: /etc/exports
        owner: root
        group: root
        mode: 0644

    - name: Create first mount point registry
      lineinfile:
        line: "{{ nfs_mount_point }}/registry"
        regexp: ^nfs_mount_point 
        path: /etc/exports

    - name: Start NFS server
      service: 
        name: nfs-server
        state: started
        enabled: true
